cmake_minimum_required(VERSION 3.10)
project(cxxos)
option(LOG "Enable log" OFF)
option(MOUNT "Enable mount" OFF)
option(MSI "Enable MSI" ON)
option(NET "Enable network" OFF)
option(THREADPOOL "Enable thread pool" OFF)
option(VMEM "Enable virtual memory" OFF)

if(LOG)
    add_compile_definitions(CXX_LOG)
endif()
if(MOUNT)
    add_compile_definitions(CXX_MOUNT)
endif()
if(MSI)
    add_compile_definitions(CXX_MSI)
endif()
if(NET)
    add_compile_definitions(CXX_NET)
endif()
if(THREADPOOL)
    add_compile_definitions(CXX_THREADPOOL)
endif()
if(VMEM)
    add_compile_definitions(CXX_VMEM)
endif()
set(CMAKE_CXX_STANDARD 17)

set(CMAKE_BUILD_TYPE "Release")
if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17")
endif()

if(WIN32)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lws2_32")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lcomdlg32")
endif()

set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)

include_directories(${PROJECT_SOURCE_DIR}/include)
add_library(Mem STATIC ${PROJECT_SOURCE_DIR}/src/Mem.cpp)
if(VMEM)
add_library(VMem STATIC ${PROJECT_SOURCE_DIR}/src/VMem.cpp)
endif()
if(WIN32)
    if(NET)
        add_library(Net STATIC ${PROJECT_SOURCE_DIR}/src/Mem.cpp ${PROJECT_SOURCE_DIR}/src/Net.cpp)
    endif()
endif()
add_library(BinarySerial STATIC ${PROJECT_SOURCE_DIR}/src/BinarySerial.cpp)
if(WIN32)
    if(MOUNT)
        add_library(Mount STATIC ${PROJECT_SOURCE_DIR}/src/BinarySerial.cpp ${PROJECT_SOURCE_DIR}/src/Mount.cpp)
    endif()
endif()
if(MSI)
add_library(Msi STATIC ${PROJECT_SOURCE_DIR}/src/BinarySerial.cpp ${PROJECT_SOURCE_DIR}/src/Msi.cpp)
endif()

add_executable(main ${PROJECT_SOURCE_DIR}/main.cpp)
target_link_libraries(main Mem  BinarySerial)
if(VMEM)
target_link_libraries(main VMem)
endif()

if(MSI)
target_link_libraries(main Msi)
endif()

if(WIN32)
    if(NET)
    target_link_libraries(main Net ws2_32)
    endif()
    if(MOUNT)
    target_link_libraries(main Mount comdlg32)
    endif()
endif()